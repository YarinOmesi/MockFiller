using GeneratedCodeAttribute = global::System.CodeDom.Compiler.GeneratedCodeAttribute;
using Wrapper_IDependency = global::TestsHelper.SourceGenerator.Tests.TestsCases.GenerateWrappers.Source.Wrapper_IDependency;
using TestedClass = global::TestsHelper.SourceGenerator.Tests.TestsCases.Base.TestedClass;
using MoqValueConverter = global::TestsHelper.SourceGenerator.MockWrapping.Converters.MoqValueConverter;
using Mock_IDependency = global::Moq.Mock<global::TestsHelper.SourceGenerator.Tests.TestsCases.Base.IDependency>;

// <auto-generated/>
namespace TestsHelper.SourceGenerator.Tests.TestsCases.GenerateWrappers.Source
{
    [GeneratedCodeAttribute("TestsHelper.SourceGenerator", "3.0.0.0")]
    public partial class Test
    {
        private Wrapper_IDependency _dependency;
        private TestedClass Build()
        {
            var converter = MoqValueConverter.Instance;
            _dependency = new Wrapper_IDependency(new Mock_IDependency(), converter);
            return new TestedClass(_dependency.Mock.Object, _nullFactory);
        }
    }
}